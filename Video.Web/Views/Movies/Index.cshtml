@model IEnumerable<Video.Domain.Entities.Movie>

@{
    ViewData["Title"] = "Movies";
}

<div class="container p-3">
    <div class="row pt-4">
        <div class="col-6">
            <h2 class="text-primary">Movies</h2>
        </div>
        <div class="col-6 text-end">
            <a class="btn btn-primary" asp-controller="Movies" asp-action="Upsert">
                <i class="bi bi-plus-circle"></i> &nbsp; New
            </a>
        </div>
    </div>
    <br>
    <table id="movies" class="table display compact w-100">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Overview)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ImageUrl)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Genre)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.InStock)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody class="align-middle"></tbody>
    </table>
</div>
@section scripts {
<script>
    $(document).ready(function(){
        var table = $("#movies").DataTable( {
            ajax:{
                url:"api/movies",
                dataSrc:""
            },
            columns:[
                {
                    data:"name",
                    render:function(data,type,movie){
                        return "<a href='/movies/upsert/" + movie.id + "'>" + data + "</a>"
                    }
                },
                {
                    data:"overview"
                }, 
                {
                    data:"imageUrl",
                    render: function(data){
                        return "<img src=" + data + " class='img-thumbnail' style='width:64px; height:84px;' />"
                    },
                },
                {
                    data:"genre.name"
                },              
                {
                    data:"inStock"
                },
                {
                    data:"id",
                    render: function(data){
                       return "<a class='btn-link mx-2 js-delete' data-movie-id=" + data + "><i class='bi bi-trash-fill text-danger' style='font-size: 1.2rem; cursor:pointer;'></i></a>"
                    }
                }
            ]
        });

        $("#movies").on("click", ".js-delete", function(){
            var button = $(this);
            bootbox.confirm({
                message: "<p class='mt-3 text-danger fw-bold'>Are you sure want to delete this movie?</p>",
                buttons: {
                    confirm: {
                        label: '<i class="bi bi-check"></i> Confirm',
                        className: 'btn-success'
                    },
                    cancel: {
                        label: '<i class="bi bi-x"></i> Cancel',
                        className: 'btn-danger'
                    }
                },
                callback: function (result) {
                    if(result){
                        $.ajax({
                            url: "api/movies/" + button.attr("data-movie-id"),
                            method: "DELETE",
                            dataType: "json",
                            success: function(){
                                table.row(button.parents("tr")).remove().draw();
                                toastr.success("Movie deleted successfully");
                            },
                            error: function(){
                            toastr.error("Something went wrong!");
                            }
                        });
                    }
                }
            });
        });
    });
</script>
}